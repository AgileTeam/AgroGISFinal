/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas_Carga;

import Clases_Modulo_Carga.CaracteristicasCereal;
import Clases_Modulo_Carga.CaracteristicasPorTipoDeCerealPorMuestra;
import Clases_Modulo_Carga.Descarga;
import Clases_Modulo_Carga.MuestraTomada;
import Clases_Modulo_Viaje.Viaje;
import Hibernate.GestorHibernate;
import java.awt.*;
import java.text.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Carolina
 */
public class frmRegistrarResultadosLab extends javax.swing.JInternalFrame {
GestorHibernate gestorH = new GestorHibernate();
    /**
     * Creates new form frmRegistrarResultadosLab
     */
    public frmRegistrarResultadosLab() {
        initComponents();
        
        txtHora.setEditable(false);
        txtHora.setEnabled(false);
        txtHora.setEnabled(false);
        txtHora.setEditable(false);
        txtFecha.setEditable(false);
        txtFecha.setEnabled(false);
        txtFecha.setEditable(false);
        txtFecha.setEnabled(false);
        
        calendarioDViaje.setEnabled(false);
        calendarioHViaje.setEnabled(false);
        txtNumMuestra.setEnabled(false);
        cmbProductor.setEnabled(false);
  
                
       
        //setear el campo de fecha con la del sistema
        GregorianCalendar gc=new GregorianCalendar();
        GregorianCalendar.getInstance();
        gc.setTimeZone(TimeZone.getTimeZone("GMT-3"));
        gc.get(Calendar.DAY_OF_WEEK);
        gc.get(Calendar.MONTH);
        gc.get(Calendar.YEAR);
        SimpleDateFormat formateador= new SimpleDateFormat("dd-MM-yyyy");
        txtFecha.setText(formateador.format(gc.getTime()));
        txtFecha.setText(formateador.format(gc.getTime()));
        //setear el campo de hora con la del sistema
        GregorianCalendar calendario=new GregorianCalendar();
        GregorianCalendar.getInstance();
        gc.setTimeZone(TimeZone.getTimeZone("GMT-3"));
        calendario.get(Calendar.HOUR);
        calendario.get(Calendar.MINUTE);
        SimpleDateFormat formateadorHora=new SimpleDateFormat("hh:mm");
        txtHora.setText(formateadorHora.format(calendario.getTime()));
        txtHora.setText(formateadorHora.format(calendario.getTime()));
        
        
        //Las siguientes lineas son para dar a la pantalla el tamaño requerido y luego centrarla en la pantalla.
        Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension tamanioPantalla = kit.getScreenSize();
        int ancho = 1210;
        int alto = 630;
        int posX = (int) ((tamanioPantalla.width - ancho) / 2);
//        int posY = (int) ((tamanioPantalla.height - alto) / 2);
        this.setSize(ancho, alto);
        this.setLocation(posX, 0);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btnAceptarViaje = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ckFecha = new javax.swing.JCheckBox();
        ckNumMuestra = new javax.swing.JCheckBox();
        ckProductor = new javax.swing.JCheckBox();
        ckTransportista = new javax.swing.JCheckBox();
        ckEstablecimiento = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        calendarioHViaje = new datechooser.beans.DateChooserCombo();
        calendarioDViaje = new datechooser.beans.DateChooserCombo();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtNumMuestra = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        cmbProductor = new javax.swing.JComboBox();
        btnBuscarViaje = new javax.swing.JButton();
        btnAceptarTodos1 = new javax.swing.JButton();
        btnAceptarTodos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViaje = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtProductor = new javax.swing.JTextField();
        txtMuestra = new javax.swing.JTextField();
        txtEstablecimiento = new javax.swing.JTextField();
        txtCereal = new javax.swing.JTextField();
        txtFechaEnvio = new javax.swing.JTextField();
        txtEnviadoPor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtDomicilioLab = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtLocalidadLab = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtTelefonoLab = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtProvinciaLab = new javax.swing.JTextField();
        txtEspecialidad = new javax.swing.JTextField();
        txtLaboratorio = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        calendarioRecep = new datechooser.beans.DateChooserCombo();
        calendarioEnvio = new datechooser.beans.DateChooserCombo();
        jLabel32 = new javax.swing.JLabel();
        txtMuestraLab = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        botonMaiz = new javax.swing.JRadioButton();
        botonSoja = new javax.swing.JRadioButton();
        botonTrigo = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        labelDureza = new javax.swing.JLabel();
        labelProteinas = new javax.swing.JLabel();
        labelGluten = new javax.swing.JLabel();
        labelColor = new javax.swing.JLabel();
        labelAlmidon = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtDurezaObtenida = new javax.swing.JTextField();
        txtDurezaNormal = new javax.swing.JTextField();
        txtProtNormal = new javax.swing.JTextField();
        txtGlutenNormal = new javax.swing.JTextField();
        txtAlmidonNormal = new javax.swing.JTextField();
        txtProtObtenidas = new javax.swing.JTextField();
        txtGlutenObtenido = new javax.swing.JTextField();
        txtColorNormal = new javax.swing.JTextField();
        txtAlmidonObtenido = new javax.swing.JTextField();
        txtColorObtenido = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnNuevo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Resultados Analisis");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Fecha");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Hora");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Usuario");

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/UsuarioLogueado.png"))); // NOI18N

        btnAceptarViaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Aceptar.png"))); // NOI18N
        btnAceptarViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarViajeActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Muestras Enviadas por", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel5.setLayout(null);

        ckFecha.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ckFecha.setText("Fecha Envío");
        jPanel5.add(ckFecha);
        ckFecha.setBounds(10, 30, 90, 23);

        ckNumMuestra.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ckNumMuestra.setText("Numero Viaje");
        jPanel5.add(ckNumMuestra);
        ckNumMuestra.setBounds(10, 50, 110, 23);

        ckProductor.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ckProductor.setText("Productor");
        jPanel5.add(ckProductor);
        ckProductor.setBounds(10, 70, 90, 23);

        ckTransportista.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ckTransportista.setText("Transportista");
        jPanel5.add(ckTransportista);
        ckTransportista.setBounds(10, 90, 120, 23);

        ckEstablecimiento.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ckEstablecimiento.setText("Establecimiento");
        jPanel5.add(ckEstablecimiento);
        ckEstablecimiento.setBounds(10, 110, 120, 23);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel10.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Desde");
        jPanel10.add(jLabel7);
        jLabel7.setBounds(10, 20, 60, 20);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Hasta");
        jPanel10.add(jLabel10);
        jLabel10.setBounds(10, 50, 60, 20);
        jPanel10.add(calendarioHViaje);
        calendarioHViaje.setBounds(50, 50, 90, 20);
        jPanel10.add(calendarioDViaje);
        calendarioDViaje.setBounds(50, 20, 90, 20);

        jPanel5.add(jPanel10);
        jPanel10.setBounds(160, 30, 160, 90);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº Muestra", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel12.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Nº");
        jPanel12.add(jLabel11);
        jLabel11.setBounds(20, 40, 50, 20);
        jPanel12.add(txtNumMuestra);
        txtNumMuestra.setBounds(40, 40, 100, 20);

        jPanel5.add(jPanel12);
        jPanel12.setBounds(340, 30, 160, 90);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Productor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel13.setLayout(null);

        jPanel13.add(cmbProductor);
        cmbProductor.setBounds(20, 40, 200, 20);

        jPanel5.add(jPanel13);
        jPanel13.setBounds(520, 30, 240, 90);

        btnBuscarViaje.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnBuscarViaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscarViaje.setText("Buscar");
        btnBuscarViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarViajeActionPerformed(evt);
            }
        });
        jPanel5.add(btnBuscarViaje);
        btnBuscarViaje.setBounds(320, 140, 100, 30);

        btnAceptarTodos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/plus.png"))); // NOI18N
        btnAceptarTodos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarTodos1ActionPerformed(evt);
            }
        });
        jPanel5.add(btnAceptarTodos1);
        btnAceptarTodos1.setBounds(30, 140, 30, 30);

        btnAceptarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete.png"))); // NOI18N
        btnAceptarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarTodosActionPerformed(evt);
            }
        });
        jPanel5.add(btnAceptarTodos);
        btnAceptarTodos.setBounds(70, 140, 30, 30);

        tblViaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Nº Fecha", "Productor"
            }
        ));
        jScrollPane1.setViewportView(tblViaje);

        jPanel8.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Productor");
        jPanel8.add(jLabel6);
        jLabel6.setBounds(30, 10, 90, 20);

        jLabel41.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel41.setText("Establecimiento");
        jPanel8.add(jLabel41);
        jLabel41.setBounds(320, 10, 130, 20);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Enviado por");
        jPanel8.add(jLabel8);
        jLabel8.setBounds(250, 40, 90, 20);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Fecha Envio");
        jPanel8.add(jLabel9);
        jLabel9.setBounds(20, 40, 80, 20);

        jLabel43.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel43.setText("Nº Muestra");
        jPanel8.add(jLabel43);
        jLabel43.setBounds(670, 10, 100, 20);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Cereal");
        jPanel8.add(jLabel13);
        jLabel13.setBounds(590, 40, 70, 20);
        jPanel8.add(txtProductor);
        txtProductor.setBounds(90, 10, 200, 20);
        jPanel8.add(txtMuestra);
        txtMuestra.setBounds(740, 10, 100, 20);
        jPanel8.add(txtEstablecimiento);
        txtEstablecimiento.setBounds(420, 10, 210, 20);
        jPanel8.add(txtCereal);
        txtCereal.setBounds(640, 40, 100, 20);
        jPanel8.add(txtFechaEnvio);
        txtFechaEnvio.setBounds(90, 40, 100, 20);
        jPanel8.add(txtEnviadoPor);
        txtEnviadoPor.setBounds(320, 40, 210, 20);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAceptarViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(204, 204, 204))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptarViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(406, 406, 406))
        );

        jTabbedPane1.addTab("Datos Muestra", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Laboratorio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel7.setLayout(null);

        jLabel26.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel26.setText("Especialidad");
        jPanel7.add(jLabel26);
        jLabel26.setBounds(30, 30, 110, 20);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel27.setText("Laboratorio");
        jPanel7.add(jLabel27);
        jLabel27.setBounds(400, 30, 110, 20);

        jLabel28.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel28.setText("Domicilio");
        jPanel7.add(jLabel28);
        jLabel28.setBounds(50, 60, 70, 20);
        jPanel7.add(txtDomicilioLab);
        txtDomicilioLab.setBounds(110, 60, 250, 20);

        jLabel29.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel29.setText("Localidad");
        jPanel7.add(jLabel29);
        jLabel29.setBounds(410, 60, 80, 20);
        jPanel7.add(txtLocalidadLab);
        txtLocalidadLab.setBounds(470, 60, 250, 20);

        jLabel30.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel30.setText("Provincia");
        jPanel7.add(jLabel30);
        jLabel30.setBounds(50, 90, 60, 20);
        jPanel7.add(txtTelefonoLab);
        txtTelefonoLab.setBounds(470, 90, 250, 20);

        jLabel31.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel31.setText("Telefono");
        jPanel7.add(jLabel31);
        jLabel31.setBounds(410, 90, 80, 20);
        jPanel7.add(txtProvinciaLab);
        txtProvinciaLab.setBounds(110, 90, 250, 20);
        jPanel7.add(txtEspecialidad);
        txtEspecialidad.setBounds(110, 30, 250, 20);
        jPanel7.add(txtLaboratorio);
        txtLaboratorio.setBounds(470, 30, 250, 20);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados Analisis", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel6.setLayout(null);

        jLabel24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel24.setText("Fecha Envio");
        jPanel6.add(jLabel24);
        jLabel24.setBounds(330, 30, 100, 20);

        jLabel25.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel25.setText("Fecha Recepción");
        jPanel6.add(jLabel25);
        jLabel25.setBounds(580, 30, 120, 20);
        jPanel6.add(calendarioRecep);
        calendarioRecep.setBounds(680, 30, 110, 20);
        jPanel6.add(calendarioEnvio);
        calendarioEnvio.setBounds(400, 30, 110, 20);

        jLabel32.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel32.setText("Muestra Nº");
        jPanel6.add(jLabel32);
        jLabel32.setBounds(60, 30, 100, 20);
        jPanel6.add(txtMuestraLab);
        txtMuestraLab.setBounds(130, 30, 100, 20);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cereal", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel11.setLayout(null);

        botonMaiz.setText("Maiz");
        jPanel11.add(botonMaiz);
        botonMaiz.setBounds(40, 20, 50, 23);

        botonSoja.setText("Soja");
        jPanel11.add(botonSoja);
        botonSoja.setBounds(190, 20, 50, 23);

        botonTrigo.setText("Trigo");
        jPanel11.add(botonTrigo);
        botonTrigo.setBounds(330, 20, 60, 23);

        jPanel6.add(jPanel11);
        jPanel11.setBounds(240, 70, 440, 50);
        jPanel6.add(jSeparator1);
        jSeparator1.setBounds(30, 60, 850, 10);

        labelDureza.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelDureza.setText("Dureza");
        jPanel6.add(labelDureza);
        labelDureza.setBounds(140, 160, 120, 20);

        labelProteinas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelProteinas.setText("Nivel de Proteínas");
        jPanel6.add(labelProteinas);
        labelProteinas.setBounds(140, 190, 130, 20);

        labelGluten.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelGluten.setText("Nivel de Gluten");
        jPanel6.add(labelGluten);
        labelGluten.setBounds(140, 220, 140, 20);

        labelColor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelColor.setText("Color");
        jPanel6.add(labelColor);
        labelColor.setBounds(140, 250, 110, 20);

        labelAlmidon.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelAlmidon.setText("Almidon");
        jPanel6.add(labelAlmidon);
        labelAlmidon.setBounds(140, 280, 100, 20);

        jLabel39.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel39.setText("Valores Obtenidos");
        jPanel6.add(jLabel39);
        jLabel39.setBounds(520, 130, 110, 15);

        jLabel40.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel40.setText("Valores Normales");
        jPanel6.add(jLabel40);
        jLabel40.setBounds(330, 130, 110, 15);
        jPanel6.add(txtDurezaObtenida);
        txtDurezaObtenida.setBounds(520, 160, 100, 20);
        jPanel6.add(txtDurezaNormal);
        txtDurezaNormal.setBounds(330, 160, 100, 20);
        jPanel6.add(txtProtNormal);
        txtProtNormal.setBounds(330, 190, 100, 20);
        jPanel6.add(txtGlutenNormal);
        txtGlutenNormal.setBounds(330, 220, 100, 20);
        jPanel6.add(txtAlmidonNormal);
        txtAlmidonNormal.setBounds(330, 280, 100, 20);
        jPanel6.add(txtProtObtenidas);
        txtProtObtenidas.setBounds(520, 190, 100, 20);
        jPanel6.add(txtGlutenObtenido);
        txtGlutenObtenido.setBounds(520, 220, 100, 20);
        jPanel6.add(txtColorNormal);
        txtColorNormal.setBounds(330, 250, 100, 20);
        jPanel6.add(txtAlmidonObtenido);
        txtAlmidonObtenido.setBounds(520, 280, 100, 20);
        jPanel6.add(txtColorObtenido);
        txtColorObtenido.setBounds(520, 250, 100, 20);
        jPanel6.add(jSeparator2);
        jSeparator2.setBounds(30, 150, 850, 10);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Datos Analisis", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnNuevo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icononuevo.PNG"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");

        btnGuardar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap(327, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarTodos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarTodos1ActionPerformed
         if (ckFecha.isSelected()) {
            calendarioDViaje.setEnabled(true);
            calendarioHViaje.setEnabled(true);
        }
      
         if (ckNumMuestra.isSelected()) {
           txtNumMuestra.setEnabled(true);
        }
         if (ckProductor.isSelected()) {
            cmbProductor.setEnabled(true);
        }
    
    }//GEN-LAST:event_btnAceptarTodos1ActionPerformed

    private void btnAceptarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarTodosActionPerformed
        calendarioDViaje.setEnabled(false);
        calendarioHViaje.setEnabled(false);
        txtNumMuestra.setEnabled(false);
        cmbProductor.setEnabled(false);
       
    }//GEN-LAST:event_btnAceptarTodosActionPerformed

    private void btnBuscarViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarViajeActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date fecha1 = sdf.parse(calendarioDViaje.getText(), new ParsePosition(0));
        Date fecha3 = sdf.parse(calendarioHViaje.getText(), new ParsePosition(0));
        DefaultTableModel modeloT = (DefaultTableModel) tblViaje.getModel();
        //Verifico que este seleccionada la opcion de fecha
        if (calendarioDViaje.isEnabled()) {
            //Creo el objeto orden
            Iterator ite = gestorH.listarClase(MuestraTomada.class).iterator();
            while (ite.hasNext()) {
                int banderaFecha = 0;
                MuestraTomada muestra = (MuestraTomada) ite.next();
                //Verifico que la muestra no este en la tabla previamente cargada
                for (int i = 0; i < modeloT.getRowCount(); i++) {
                    if (muestra.getNumeroMuestra() == modeloT.getValueAt(i, 1)) {
                        banderaFecha = 1;
                    }
                }
                //La orden no esta cargada
                if (banderaFecha == 0) {
                    Date fecha2 = sdf.parse(muestra.getDescarga().getFecha(), new ParsePosition(0));
                    Iterator ite2 = gestorH.listarClase(Viaje.class).iterator();
                    //Busco el objeto viaje
                    while (ite2.hasNext()) {
                        Viaje viaje = (Viaje) ite2.next();
                        //Comparo el viaje que corresponde a la muestra, comparo el rango de fechas
                        if ((Long.parseLong(String.valueOf(muestra.getViaje())) == viaje.getIdViaje()) && (fecha2.after(fecha1)) && (fecha1.before(fecha3)) && muestra.getEstado()==1) {
                            //Guardo el objeto muestra en la tabla
                            Object fila[] = {muestra.getDescarga().getFecha(), muestra.getNumeroMuestra(), viaje.getProductor()};
                            modeloT.addRow(fila);
                            tblViaje.setModel(modeloT);
                        }
                    }

                }
            }
        }
        //Verifico que este seleccionada la opcion de Productor
        if (cmbProductor.isEnabled()) {
            //Creo el objeto muestra
            Iterator ite = gestorH.listarClase(MuestraTomada.class).iterator();
            while (ite.hasNext()) {
                int banderaFecha = 0;
                MuestraTomada muestra = (MuestraTomada) ite.next();
                //Verifico que la muestra no este en la tabla previamente cargada
                for (int i = 0; i < modeloT.getRowCount(); i++) {
                    if (muestra.getNumeroMuestra() == modeloT.getValueAt(i, 1)) {
                        banderaFecha = 1;
                    }
                }
                //La orden no esta cargada
                if (banderaFecha == 0) {
                    Date fecha2 = sdf.parse(muestra.getFechaEnvio(), new ParsePosition(0));
                    Iterator ite2 = gestorH.listarClase(Viaje.class).iterator();
                    //Busco el objeto viaje
                    while (ite2.hasNext()) {
                        Viaje viaje = (Viaje) ite2.next();
                        //Comparo el viaje que corresponde a la muestra, comparo el rango de fechas
                        if ((Long.parseLong(String.valueOf(muestra.getViaje())) == viaje.getIdViaje()) && (viaje.getProductor()== cmbProductor.getSelectedItem()) && muestra.getEstado()==1) {
                            //Guardo el objeto muestra en la tabla
                            Object fila[] = {muestra.getFechaEnvio(), muestra.getNumeroMuestra(), viaje.getProductor()};
                            modeloT.addRow(fila);
                            tblViaje.setModel(modeloT);
                        }
                    }

                }
            }
        }
         //Verifico que este seleccionada la opcion de Numero de muestra
        if (txtNumMuestra.isEnabled()) {
            //Creo el objeto orden
            Iterator ite = gestorH.listarClase(MuestraTomada.class).iterator();
            while (ite.hasNext()) {
                int banderaFecha = 0;
                MuestraTomada muestra = (MuestraTomada) ite.next();
                //Verifico que la muestra no este en la tabla previamente cargada
                for (int i = 0; i < modeloT.getRowCount(); i++) {
                    if (muestra.getNumeroMuestra() == modeloT.getValueAt(i, 1)) {
                        banderaFecha = 1;
                    }
                }
                //La orden no esta cargada
                if (banderaFecha == 0) {
                    Date fecha2 = sdf.parse(muestra.getFechaEnvio(), new ParsePosition(0));
                    Iterator ite2 = gestorH.listarClase(Viaje.class).iterator();
                    //Busco el objeto viaje
                    while (ite2.hasNext()) {
                        Viaje viaje = (Viaje) ite2.next();
                        //Comparo el viaje que corresponde a la muestra, comparo el rango de fechas
                        if ((Long.parseLong(String.valueOf(muestra.getViaje())) == viaje.getIdViaje()) && (muestra.getNumeroMuestra()== Long.parseLong(txtNumMuestra.getText())) && muestra.getEstado()==1) {
                            //Guardo el objeto muestra en la tabla
                            Object fila[] = {muestra.getFechaEnvio(), muestra.getNumeroMuestra(), viaje.getProductor()};
                            modeloT.addRow(fila);
                            tblViaje.setModel(modeloT);
                        }
                    }

                }
            }
        }
        
        
    }//GEN-LAST:event_btnBuscarViajeActionPerformed

    private void btnAceptarViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarViajeActionPerformed
   DefaultTableModel modeloTabla = (DefaultTableModel) tblViaje.getModel();
  
    int fila = tblViaje.getSelectedRow();
    txtProductor.setText(modeloTabla.getValueAt(fila,2).toString());
    Iterator ite = gestorH.listarClase(MuestraTomada.class).iterator();
    while(ite.hasNext()){
          MuestraTomada muestra = new MuestraTomada();
          if(muestra.getNumeroMuestra()== modeloTabla.getValueAt(fila,1)){
              txtEstablecimiento.setText(muestra.getDescarga().getEstablecimiento().toString());
              txtMuestra.setText(String.valueOf(muestra.getNumeroMuestra()));
              txtCereal.setText(muestra.getDescarga().getCereal().toString());
              txtFechaEnvio.setText(muestra.getFechaEnvio());
              txtEnviadoPor.setText(muestra.getResponsableEnvio());
              txtLaboratorio.setText(muestra.getLaboratorio().toString());
              txtEspecialidad.setText(muestra.getLaboratorio().getEspecialidad().toString());
              txtDomicilioLab.setText(muestra.getLaboratorio().getDomicilio().getCalle().toString());
              txtLocalidadLab.setText(muestra.getLaboratorio().getDomicilio().getBarrio().getLocalidad().toString());
              txtProvinciaLab.setText(muestra.getLaboratorio().getDomicilio().getBarrio().getLocalidad().getDepartamento().getProvincia().toString());
              txtTelefonoLab.setText(muestra.getLaboratorio().getTelefono().toString());
              txtMuestraLab.setText(String.valueOf(muestra.getNumeroMuestra()));
          }
    }
    if(txtCereal.getText()=="Trigo"){
        botonTrigo.setSelected(true);
        botonMaiz.setSelected(false);
        botonSoja.setSelected(false);
    }
    if(txtCereal.getText()=="Soja"){
        botonTrigo.setSelected(false);
        botonMaiz.setSelected(false);
        botonSoja.setSelected(true);
    }
    if(txtCereal.getText()=="Maiz"){
        botonTrigo.setSelected(false);
        botonMaiz.setSelected(true);
        botonSoja.setSelected(false);
    }
    }//GEN-LAST:event_btnAceptarViajeActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Iterator ite = gestorH.listarClase(CaracteristicasCereal.class).iterator();
        CaracteristicasCereal caracteristicas = new CaracteristicasCereal();
        while(ite.hasNext()){
            if(caracteristicas.getNombreCaracteristica()== labelAlmidon.getText()){
                CaracteristicasPorTipoDeCerealPorMuestra car1 = new CaracteristicasPorTipoDeCerealPorMuestra();
                car1.setCaracteristicas(caracteristicas);
                car1.setValor(Double.parseDouble(txtAlmidonObtenido.getText()));
                gestorH.guardarObjeto(car1);
            }
            if(caracteristicas.getNombreCaracteristica()== labelColor.getText()){
                CaracteristicasPorTipoDeCerealPorMuestra car1 = new CaracteristicasPorTipoDeCerealPorMuestra();
                car1.setCaracteristicas(caracteristicas);
                car1.setValor(Double.parseDouble(txtColorObtenido.getText()));
                gestorH.guardarObjeto(car1);
            }
            if(caracteristicas.getNombreCaracteristica()== labelDureza.getText()){
                CaracteristicasPorTipoDeCerealPorMuestra car1 = new CaracteristicasPorTipoDeCerealPorMuestra();
                car1.setCaracteristicas(caracteristicas);
                car1.setValor(Double.parseDouble(txtDurezaObtenida.getText()));
                gestorH.guardarObjeto(car1);
            }
            if(caracteristicas.getNombreCaracteristica()== labelGluten.getText()){
                CaracteristicasPorTipoDeCerealPorMuestra car1 = new CaracteristicasPorTipoDeCerealPorMuestra();
                car1.setCaracteristicas(caracteristicas);
                car1.setValor(Double.parseDouble(txtGlutenObtenido.getText()));
                gestorH.guardarObjeto(car1);
            }
            if(caracteristicas.getNombreCaracteristica()== labelProteinas.getText()){
                CaracteristicasPorTipoDeCerealPorMuestra car1 = new CaracteristicasPorTipoDeCerealPorMuestra();
                car1.setCaracteristicas(caracteristicas);
                car1.setValor(Double.parseDouble(txtProtObtenidas.getText()));
                gestorH.guardarObjeto(car1);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        DefaultTableModel modeloT = (DefaultTableModel) tblViaje.getModel();
        calendarioDViaje.setEnabled(false);
        calendarioHViaje.setEnabled(false);
        txtNumMuestra.setEnabled(false);
        cmbProductor.setEnabled(false);
         for(int i=0; i<modeloT.getRowCount(); i++){
            modeloT.removeRow(i);
            tblViaje.setModel(modeloT);
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton botonMaiz;
    private javax.swing.JRadioButton botonSoja;
    private javax.swing.JRadioButton botonTrigo;
    private javax.swing.JButton btnAceptarTodos;
    private javax.swing.JButton btnAceptarTodos1;
    private javax.swing.JButton btnAceptarViaje;
    private javax.swing.JButton btnBuscarViaje;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private datechooser.beans.DateChooserCombo calendarioDViaje;
    private datechooser.beans.DateChooserCombo calendarioEnvio;
    private datechooser.beans.DateChooserCombo calendarioHViaje;
    private datechooser.beans.DateChooserCombo calendarioRecep;
    private javax.swing.JCheckBox ckEstablecimiento;
    private javax.swing.JCheckBox ckFecha;
    private javax.swing.JCheckBox ckNumMuestra;
    private javax.swing.JCheckBox ckProductor;
    private javax.swing.JCheckBox ckTransportista;
    private javax.swing.JComboBox cmbProductor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAlmidon;
    private javax.swing.JLabel labelColor;
    private javax.swing.JLabel labelDureza;
    private javax.swing.JLabel labelGluten;
    private javax.swing.JLabel labelProteinas;
    private javax.swing.JTable tblViaje;
    private javax.swing.JTextField txtAlmidonNormal;
    private javax.swing.JTextField txtAlmidonObtenido;
    private javax.swing.JTextField txtCereal;
    private javax.swing.JTextField txtColorNormal;
    private javax.swing.JTextField txtColorObtenido;
    private javax.swing.JTextField txtDomicilioLab;
    private javax.swing.JTextField txtDurezaNormal;
    private javax.swing.JTextField txtDurezaObtenida;
    private javax.swing.JTextField txtEnviadoPor;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtEstablecimiento;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFechaEnvio;
    private javax.swing.JTextField txtGlutenNormal;
    private javax.swing.JTextField txtGlutenObtenido;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtLaboratorio;
    private javax.swing.JTextField txtLocalidadLab;
    private javax.swing.JTextField txtMuestra;
    private javax.swing.JTextField txtMuestraLab;
    private javax.swing.JTextField txtNumMuestra;
    private javax.swing.JTextField txtProductor;
    private javax.swing.JTextField txtProtNormal;
    private javax.swing.JTextField txtProtObtenidas;
    private javax.swing.JTextField txtProvinciaLab;
    private javax.swing.JTextField txtTelefonoLab;
    // End of variables declaration//GEN-END:variables
}
